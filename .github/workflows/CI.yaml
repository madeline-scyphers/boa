name: ci

on:
  push:


env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  linux:

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/boa
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: boa
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update base environment
        run: mamba env update -n boa -f environment.yml --prune
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Update environment with development env
        run: |
          mamba env update -n boa -f environment_dev_update.yml
          mamba env update -n boa -f environment_language_updates.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Lint
        shell: bash -l {0}
        run: |
          invoke style --checkonly

      - name: Run tests
        shell: bash -l {0}
        run: invoke tests --options '-s -v --cov=boa --cov-branch --cov-report=xml'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: ./coverage.xml

      - name: Test package builds successfully
        run: |
          python -m pip install build
          python -m build

  mac:

    strategy:
      matrix:
        include:
          - os: macos-latest
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/boa

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: boa
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment_mac_x86.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update base environment
        run: mamba env update -n boa -f environment_mac_x86.yml --prune
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Update environment with development env
        run: |
          mamba env update -n boa -f environment_dev_update.yml
          mamba env update -n boa -f environment_language_updates.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run tests
        shell: bash -l {0}
        run: invoke tests --options '-s -v'

#  win:
#    strategy:
#      matrix:
#        include:
#          - os: windows-latest
#            label: win-64
#            prefix: C:\Miniconda3\envs\boa
#
#    name: ${{ matrix.label }}
#    runs-on: ${{ matrix.os }}
#
#    steps:
#      - uses: actions/checkout@v3
#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#          # windows has a problem where sometimes if conda installs a version of a package
#          # but pip needs a higher version of that package (because of dependencies)
#          # an OSError can happen because of access issues.
#          # If that happens in the future, you can move that conda package to pip,
#          # Or pin it to a higher version
#          python-version: 3.9
#          activate-environment: boa
#          environment-file: environment.yml
#
#      - name: Update env with env req
#        shell: pwsh
#        run: |
#          conda env update -n boa -f environment_dev_update.yml
#          conda env update -n boa -f environment_language_updates.yml
#      - name: Run tests
#        shell: pwsh
#        run: pytest -s
