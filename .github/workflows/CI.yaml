name: ci

on:
  push:
  pull_request:
    branches:
      - develop
      - main


env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  pre_job:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'

  CI:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    strategy:
      matrix:
        include:
          - os: ubuntu
            label: linux-64
            prefix: /usr/share/miniconda3/envs/boa

          - os: macos
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/boa

          - os: windows
            label: win-64
            prefix: C:\Miniconda3\envs\boa

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: boa
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update base environment
        run: mamba env update -n boa -f environment.yml --prune
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Update environment with development env
        run: |
          mamba env update -n boa -f environment_dev_update.yml
          mamba env update -n boa -f environment_language_updates.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Lint
        shell: bash -l {0}
        run: |
          invoke style --checkonly

      - name: Run tests
        shell: bash -l {0}
        run: invoke tests --options '-s -v --cov=boa --cov-branch --cov-report=xml'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: ./coverage.xml

      - name: Test package builds successfully
        run: |
          python -m pip install build
          python -m build

#  win:
#    strategy:
#      matrix:
#        include:
#          - os: windows-latest
#            label: win-64
#            prefix: C:\Miniconda3\envs\boa
#
#    name: ${{ matrix.label }}
#    runs-on: ${{ matrix.os }}
#
#    steps:
#      - uses: actions/checkout@v3
#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#          # windows has a problem where sometimes if conda installs a version of a package
#          # but pip needs a higher version of that package (because of dependencies)
#          # an OSError can happen because of access issues.
#          # If that happens in the future, you can move that conda package to pip,
#          # Or pin it to a higher version
#          python-version: 3.9
#          activate-environment: boa
#          environment-file: environment.yml
#
#      - name: Update env with env req
#        shell: pwsh
#        run: |
#          conda env update -n boa -f environment_dev_update.yml
#          conda env update -n boa -f environment_language_updates.yml
#      - name: Run tests
#        shell: pwsh
#        run: pytest -s

  # Report final results of the matrix tests
  result:
    name: Result
    if: needs.pre_job.outputs.should_skip != 'true' && always()
    runs-on: ubuntu-latest
    needs:
      - pre_job
      - CI

    steps:
      - name: Mark result as failed
        if: (needs.linux.result != 'success') || (needs.mac.result != 'success')
        run: exit 1
